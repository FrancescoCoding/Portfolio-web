{"version":3,"file":"static/js/286.490889ca.chunk.js","mappings":"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","sources":["webpack://francesco-gruosso-portfolio/./src/components/UI/ColourSelector.module.css?4d9a","components/UI/ColourSelector.jsx","webpack://francesco-gruosso-portfolio/./src/components/UI/BackButton.module.css?d975","components/UI/BackButton.jsx","webpack://francesco-gruosso-portfolio/./src/components/content/ProjectDetail.module.css?b023","components/content/ProjectDetail.jsx","hooks/useKeyPress.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"colours-section\":\"ColourSelector_colours-section__rQrsy\",\"colours-container\":\"ColourSelector_colours-container__Jbt+4\",\"canary\":\"ColourSelector_canary__urRib\",\"leaf\":\"ColourSelector_leaf__DruRK\",\"ocean\":\"ColourSelector_ocean__v1do5\",\"magenta\":\"ColourSelector_magenta__XZvJu\"};","import styles from \"./ColourSelector.module.css\";\r\nimport { colourActions } from \"../../store/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { FaCheck } from \"react-icons/fa\";\r\nconst checkMark = (\r\n  <FaCheck\r\n    size=\"0.68rem\"\r\n    style={{ transform: \"translateY(.06rem) translateX(-.01rem)\" }}\r\n  />\r\n);\r\n\r\nconst ColourSelector = ({ backgroundColor }) => {\r\n  const storeColour = useSelector(state => state.colours.colour);\r\n  const dispatch = useDispatch();\r\n\r\n  const canaryThemeHandler = () => {\r\n    dispatch(colourActions.colourCanary());\r\n  };\r\n  const oceanThemeHandler = () => {\r\n    dispatch(colourActions.colourOcean());\r\n  };\r\n  const magentaThemeHandler = () => {\r\n    dispatch(colourActions.colourMagenta());\r\n  };\r\n  const leafThemeHandler = () => {\r\n    dispatch(colourActions.colourLeaf());\r\n  };\r\n\r\n  return (\r\n    <section className={styles[\"colours-section\"]}>\r\n      <div\r\n        className={styles[\"colours-container\"]}\r\n        style={{ backgroundColor: `${backgroundColor}` }}\r\n      >\r\n        <button\r\n          aria-label=\"Canary colour\"\r\n          onClick={canaryThemeHandler}\r\n          className={styles.canary}\r\n        >\r\n          {storeColour === \"canary\" && checkMark}\r\n        </button>\r\n        <button\r\n          aria-label=\"Ocean colour\"\r\n          onClick={oceanThemeHandler}\r\n          className={styles.ocean}\r\n        >\r\n          {storeColour === \"ocean\" && checkMark}\r\n        </button>\r\n        <button\r\n          aria-label=\"Magenta colour\"\r\n          onClick={magentaThemeHandler}\r\n          className={styles.magenta}\r\n        >\r\n          {storeColour === \"magenta\" && checkMark}\r\n        </button>\r\n        <button\r\n          aria-label=\"Leaf colour\"\r\n          onClick={leafThemeHandler}\r\n          className={styles.leaf}\r\n        >\r\n          {storeColour === \"leaf\" && checkMark}\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ColourSelector;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"BackButton_backButton__N2VJv\"};","import styles from \"./BackButton.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\n\r\nexport const BackButton = props => {\r\n  const history = useHistory();\r\n\r\n  if (props.endpoint === undefined) {\r\n    return (\r\n      <FaArrowLeft\r\n        className={styles.backButton}\r\n        onClick={() => history.goBack()}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FaArrowLeft\r\n      className={styles.backButton}\r\n      onClick={() => history.push(`${props.endpoint}`)}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"design-section\":\"ProjectDetail_design-section__D4XN7\",\"design\":\"ProjectDetail_design__HwRxH\",\"project-card\":\"ProjectDetail_project-card__JcqGG\",\"project-container\":\"ProjectDetail_project-container__-GEik\",\"project-card-section\":\"ProjectDetail_project-card-section__xe8FZ\",\"appear\":\"ProjectDetail_appear__kuLp6\",\"project-title\":\"ProjectDetail_project-title__WUblq\",\"logo\":\"ProjectDetail_logo__YVLUs\",\"logos\":\"ProjectDetail_logos__LqYS0\",\"info\":\"ProjectDetail_info__U3fiM\",\"logo-wrap\":\"ProjectDetail_logo-wrap__UcJEj\",\"information-wrapper\":\"ProjectDetail_information-wrapper__UnXdp\",\"btn\":\"ProjectDetail_btn__2dTjI\",\"imageFill\":\"ProjectDetail_imageFill__oJMsL\",\"button-container\":\"ProjectDetail_button-container__rNV+9\",\"git-btn\":\"ProjectDetail_git-btn__fYfto\",\"img-btn\":\"ProjectDetail_img-btn__SmwdT\"};","import useKeypress from \"../../hooks/useKeyPress\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BackButton } from \"../UI/BackButton\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nimport styles from \"./ProjectDetail.module.css\";\r\n\r\nimport WorksList from \"../../settings/WorksList\";\r\nimport ColourSelector from \"../UI/ColourSelector\";\r\nimport Transition from \"../UI/Transition\";\r\n\r\nconst ProjectDetail = () => {\r\n  const params = useParams();\r\n  const storeColour = useSelector(state => state.colours);\r\n  const storeLanguage = useSelector(state => state.languages.language);\r\n\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 900px)\" });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const currentProject = WorksList.find(\r\n    project => project.endpoint === params.projectID\r\n  );\r\n\r\n  const closeHandler = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // If the lightbox is open, close it. If it's closed, go back to projects\r\n  const backCondition = !isOpen ? \"goBack\" : closeHandler;\r\n  useKeypress(\"Escape\", backCondition);\r\n\r\n  // Project validation\r\n  if (currentProject === undefined) {\r\n    return (\r\n      <section style={{ color: \"white\", padding: \"6rem\", fontSize: \"3rem\" }}>\r\n        <h1 style={{ color: \"violet\" }}>No project found</h1>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Transition />\r\n      <ColourSelector backgroundColor=\"#0a0f20\" />\r\n      {!isSmallScreen && <BackButton endpoint=\"/projects\" />}\r\n\r\n      <section className={styles[\"project-card-section\"]}>\r\n        {/* Card */}\r\n        <div className={styles[\"project-card\"]}>\r\n          <div className={styles[\"information-wrapper\"]}>\r\n            {/* Project Header (name) */}\r\n            <h1 className={styles[\"project-title\"]}>\r\n              {currentProject[`${storeLanguage}`].name}\r\n            </h1>\r\n            <div className={styles.info}>\r\n              {currentProject[`${storeLanguage}`].description && (\r\n                <p>{currentProject[`${storeLanguage}`].description}</p>\r\n              )}\r\n\r\n              <div className={styles.logos}>\r\n                {currentProject.icons &&\r\n                  !isSmallScreen &&\r\n                  currentProject.icons.map(el => {\r\n                    return (\r\n                      <div key={el.id} className={styles.logo}>\r\n                        <div className={styles[\"logo-wrap\"]}>\r\n                          {el.icon}\r\n                          <p>{el.tag}</p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles[\"button-container\"]}>\r\n              <a\r\n                href={currentProject.githubLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={styles[\"git-btn\"]}\r\n              >\r\n                <FaGithub\r\n                  size=\"3rem\"\r\n                  style={{\r\n                    alignSelf: \"flex-start\",\r\n                    color: `var(--${storeColour.colour}-active)`,\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className={styles[\"design-section\"]}>\r\n        <div\r\n          className={styles.design}\r\n          style={{\r\n            background: `linear-gradient(45deg, ${storeColour.hex} 60%, #555)`,\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","/**\r\n * useKeyPress\r\n * @param {string} key - The name of the key to respond to, compared against event.key\r\n * @param {function} action - The action to perform on key press\r\n * @param {string} action - Can also be a predefined action - works like a reducer\r\n */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function useKeypress(key, action) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const onKeyup = e => {\r\n      if (e.key === key && action === \"goBack\") {\r\n        history.push(\"/projects\");\r\n      } else if (e.key === key) action();\r\n    };\r\n\r\n    window.addEventListener(\"keyup\", onKeyup);\r\n\r\n    return () => window.removeEventListener(\"keyup\", onKeyup);\r\n  }, [action, history, key]);\r\n}\r\n"],"names":["checkMark","size","style","transform","backgroundColor","storeColour","useSelector","state","colours","colour","dispatch","useDispatch","className","styles","onClick","colourActions","BackButton","props","history","useHistory","undefined","endpoint","goBack","push","params","useParams","storeLanguage","languages","language","isSmallScreen","useMediaQuery","query","useState","isOpen","setIsOpen","currentProject","WorksList","project","projectID","backCondition","useKeypress","color","padding","fontSize","Transition","ColourSelector","name","description","icons","map","el","icon","tag","id","href","githubLink","target","rel","alignSelf","cursor","background","hex","key","action","useEffect","onKeyup","e","window","addEventListener","removeEventListener"],"sourceRoot":""}