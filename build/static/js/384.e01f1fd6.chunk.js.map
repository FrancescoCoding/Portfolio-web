{"version":3,"file":"static/js/384.e01f1fd6.chunk.js","mappings":"6NACA,GAAgB,mBAAmB,0CAA0C,OAAS,gCAAgC,SAAW,kCAAkC,mBAAmB,0CAA0C,iBAAiB,wCAAwC,MAAQ,+BAA+B,YAAY,mCAAmC,kBAAkB,yCAAyC,kBAAkB,yCAAyC,QAAU,iCAAiC,MAAQ,+BAA+B,OAAS,gCAAgC,KAAO,8BAA8B,MAAQ,+BAA+B,cAAc,qCAAqC,IAAM,6BAA6B,OAAS,gCAAgC,YAAc,qCAAqC,aAAa,oCAAoC,gBAAgB,uCAAuC,eAAe,sCAAsC,cAAc,sC,2DC2HzgC,EArHwB,SAACA,GACvB,IAAMC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,QAA3B,IAC5BC,GAAcJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMI,OAAjB,IAE1BC,GAAiBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBAGxCC,GAFgBF,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBAEF,MAAQ,OAGnD,GAA0BE,EAAAA,EAAAA,UAAS,SAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAQf,EAAMgB,SAASC,MAAK,SAACC,EAAGC,GACpC,GAAwB,kBAAbD,EAAEL,GACX,OAAOK,EAAEL,GAASM,EAAEN,GACf,GAA0C,kBAA/BK,EAAE,GAAD,OAAIjB,IAAiBmB,KAAmB,CACzD,IAAMC,EAAQH,EAAE,GAAD,OAAIjB,IAAiBmB,KAAKE,MAAM,GAAGC,cAC5CC,EAAQL,EAAE,GAAD,OAAIlB,IAAiBmB,KAAKE,MAAM,GAAGC,cAElD,OAAIF,EAAQG,GACF,EACCH,EAAQG,EACV,EAGF,CACR,CAEC,OAAO,CAEV,IAEKC,EAAY,SAACC,GAAD,OAAWA,EAAMC,iBAAjB,EAElB,OACE,+BACE,gBAAKC,UAAWC,EAAAA,oBAAhB,UACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,gBACED,UAAS,UAAKC,EAAAA,MAAL,YAAqBA,EAAO,GAAD,OAAIvB,EAAYwB,UACpDC,MAAO,CAAEC,aAAcrB,GAFzB,SAIGI,EAAMkB,KAAI,SAACC,GACV,OACE,iBAAKN,UAAWC,EAAAA,eAAhB,WACE,SAAC,KAAD,CAEEM,GAAE,oBAAeD,EAAQE,UACzBR,UAAWC,EAAAA,kBAHb,UAKE,iBACED,UAAS,UAAKC,EAAAA,aAAL,YACPA,EAAO,GAAD,OAAIvB,EAAYwB,UAF1B,WAQE,gBAAKF,UAAWC,EAAAA,mBAAhB,UACE,gBAAKQ,IAAKH,EAAQI,MAAOC,IAAKL,EAAQd,UAExC,iBAAKQ,UAAWC,EAAAA,mBAAhB,WACE,uBAAIK,EAAQ,GAAD,OAAIjC,IAAiBmB,QAChC,eAAGQ,UAAWC,EAAAA,MAAd,UACG,IACAK,EAAQ,GAAD,OAAIjC,IAAiBuC,MAAO,UAGvChC,IACC,cACEiC,IAAI,aACJC,KAAMR,EAAQS,WACdC,QAASnB,EACToB,OAAO,SACP,aAAYX,EAAQ,GAAD,OAAIjC,IAAiBmB,KAL1C,UAOE,SAAC,MAAD,CACEQ,UAAS,UAAKC,EAAAA,IAAL,YAAmBA,EAAAA,QAC5BiB,MAAM,gBAhCTZ,EAAQa,IAuCdvC,IACC,gBAAKoB,UAAWC,EAAAA,YAAhB,UACE,cAAGD,UAAS,WAAMC,EAAAA,OAAlB,SACGK,EAAQ,GAAD,OAAIjC,IAAiBuC,YA5CON,EAAQa,GAAK,MAkD5D,OAEH,gBAAKnB,UAAWC,EAAAA,oBAAhB,UACE,gBAAKD,UAAWC,EAAAA,kBAAhB,UACE,oBACET,KAAK,SACL2B,GAAG,SACHC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAASoC,EAAEL,OAAOG,MAAzB,EAJZ,WAME,mBAAQA,MAAM,QAAd,uBACA,mBAAQA,MAAM,OAAd,+BASf,E,8BCtGD,EAZiB,WACf,OACE,iCACE,SAACG,EAAA,EAAD,CAAYC,SAAO,KACnB,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,CAAiBtC,SAAUuC,EAAAA,MAIhC,C","sources":["webpack://francesco-gruosso-portfolio/./src/components/content/ProjectsContent.module.css?4990","components/content/ProjectsContent.jsx","pages/Projects.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"projects-section\":\"ProjectsContent_projects-section__3lk3-\",\"appear\":\"ProjectsContent_appear__JqdVQ\",\"projects\":\"ProjectsContent_projects__35bLc\",\"filter-container\":\"ProjectsContent_filter-container__caR7P\",\"filter-wrapper\":\"ProjectsContent_filter-wrapper__H94Tn\",\"items\":\"ProjectsContent_items__d89lH\",\"list-item\":\"ProjectsContent_list-item__8fLxw\",\"image-container\":\"ProjectsContent_image-container__5SU-o\",\"title-container\":\"ProjectsContent_title-container__q1Vql\",\"magenta\":\"ProjectsContent_magenta__wobMR\",\"ocean\":\"ProjectsContent_ocean__r3IT+\",\"canary\":\"ProjectsContent_canary__VUiFJ\",\"leaf\":\"ProjectsContent_leaf__OY0iw\",\"short\":\"ProjectsContent_short__eUzfv\",\"project-git\":\"ProjectsContent_project-git__Rj9j7\",\"git\":\"ProjectsContent_git__dgGl-\",\"github\":\"ProjectsContent_github__snQib\",\"description\":\"ProjectsContent_description__+AtgD\",\"leaf-hover\":\"ProjectsContent_leaf-hover__uhjj5\",\"magenta-hover\":\"ProjectsContent_magenta-hover__BgzxY\",\"canary-hover\":\"ProjectsContent_canary-hover__qtPJN\",\"ocean-hover\":\"ProjectsContent_ocean-hover__laKUh\"};","import styles from \"./ProjectsContent.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProjectsContent = (props) => {\r\n  const storeLanguage = useSelector((state) => state.languages.language);\r\n  const storeColour = useSelector((state) => state.colours);\r\n\r\n  const isMediumScreen = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 870px)\" });\r\n\r\n  const smallScreenPadding = isSmallScreen ? \"0px\" : \"16px\";\r\n\r\n  // create filter state\r\n  const [order, setOrder] = useState(\"order\");\r\n\r\n  // let items = props.projects;\r\n  const items = props.projects.sort((a, b) => {\r\n    if (typeof a[order] === \"number\") {\r\n      return a[order] - b[order];\r\n    } else if (typeof a[`${storeLanguage}`].name === \"string\") {\r\n      const nameA = a[`${storeLanguage}`].name.slice(2).toUpperCase();\r\n      const nameB = b[`${storeLanguage}`].name.slice(2).toUpperCase();\r\n\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      } else if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    } else {\r\n      // handle other data types or values\r\n      return 0;\r\n    }\r\n  });\r\n\r\n  const stopEvent = (event) => event.stopPropagation();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles[\"projects-section\"]}>\r\n        <div className={styles.projects}>\r\n          <div\r\n            className={`${styles.items} ${styles[`${storeColour.colour}`]}`}\r\n            style={{ paddingRight: smallScreenPadding }}\r\n          >\r\n            {items.map((project) => {\r\n              return (\r\n                <div className={styles[\"project-git\"]} key={project.id + \"git\"}>\r\n                  <Link\r\n                    key={project.id}\r\n                    to={`/projects/${project.endpoint}`}\r\n                    className={styles[\"list-container\"]}\r\n                  >\r\n                    <div\r\n                      className={`${styles[\"list-item\"]} ${\r\n                        styles[`${storeColour.colour}`]\r\n                      }`}\r\n                      // style={{\r\n                      //   background: `url(${project.image}) no-repeat center center/cover`,\r\n                      // }}\r\n                    >\r\n                      <div className={styles[\"image-container\"]}>\r\n                        <img src={project.image} alt={project.name} />\r\n                      </div>\r\n                      <div className={styles[\"title-container\"]}>\r\n                        <p>{project[`${storeLanguage}`].name}</p>\r\n                        <p className={styles.short}>\r\n                          {\" \"}\r\n                          {project[`${storeLanguage}`].short}{\" \"}\r\n                        </p>\r\n                      </div>\r\n                      {isMediumScreen && (\r\n                        <a\r\n                          rel=\"noreferrer\"\r\n                          href={project.githubLink}\r\n                          onClick={stopEvent}\r\n                          target=\"_blank\"\r\n                          aria-label={project[`${storeLanguage}`].name}\r\n                        >\r\n                          <FaGithub\r\n                            className={`${styles.git} ${styles.github}`}\r\n                            color=\"white\"\r\n                          />\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </Link>\r\n\r\n                  {isMediumScreen && (\r\n                    <div className={styles.description}>\r\n                      <p className={` ${styles.short}`}>\r\n                        {project[`${storeLanguage}`].short}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={styles[\"filter-container\"]}>\r\n            <div className={styles[\"filter-wrapper\"]}>\r\n              <select\r\n                name=\"filter\"\r\n                id=\"filter\"\r\n                value={order}\r\n                onChange={(e) => setOrder(e.target.value)}\r\n              >\r\n                <option value=\"order\">Featured</option>\r\n                <option value=\"name\">Name</option>\r\n                {/* <option value=\"order\">Date</option> */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsContent;\r\n","import Transition from \"../components/UI/Transition\";\r\nimport Navbar from \"../components/UI/Navbar\";\r\nimport ProjectsContent from \"../components/content/ProjectsContent\";\r\nimport ProjectsList from \"../settings/WorksList\";\r\n// import Sidebar from \"../components/UI/Sidebar\";\r\nimport { AnimatedArrow } from \"../assets/Animations/Animations\";\r\nimport ColourSelector from \"../components/UI/ColourSelector\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <>\r\n      <Transition reverse />\r\n      <Navbar />\r\n      <ColourSelector />\r\n      <ProjectsContent projects={ProjectsList} />\r\n      {/* <Sidebar concatContent={<AnimatedArrow />} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["props","storeLanguage","useSelector","state","languages","language","storeColour","colours","isMediumScreen","useMediaQuery","query","smallScreenPadding","useState","order","setOrder","items","projects","sort","a","b","name","nameA","slice","toUpperCase","nameB","stopEvent","event","stopPropagation","className","styles","colour","style","paddingRight","map","project","to","endpoint","src","image","alt","short","rel","href","githubLink","onClick","target","color","id","value","onChange","e","Transition","reverse","Navbar","ColourSelector","ProjectsList"],"sourceRoot":""}